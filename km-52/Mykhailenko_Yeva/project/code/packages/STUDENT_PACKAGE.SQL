CREATE OR REPLACE PACKAGE STUDENT_PACKAGE AS

TYPE STUDENT_INFO_RECORD IS RECORD (
    STUDENT_LOGIN UNI_USER.USER_LOGIN%TYPE, 
    CARD_ID STUDENT.CARD_ID%TYPE, 
    STUDENT_NAME STUDENT.STUDENT_NAME%TYPE, 
    ST_SEMESTER STUDENT.ST_SEMESTER%TYPE
);
TYPE STUDENT_INFO_TABLE IS 
    TABLE OF STUDENT_INFO_RECORD;
TYPE STUDENT_MARKS_RECORD IS RECORD (
    DISCIPLINE_NAME DISCIPLINE.DISCIPLINE_NAME%TYPE, 
    MARK MARK.MARK%TYPE
);
TYPE STUDENT_MARKS_TABLE IS 
    TABLE OF STUDENT_MARKS_RECORD;

FUNCTION GET_STUDENT_INFO(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
)RETURN STUDENT_INFO_TABLE PIPELINED;

FUNCTION GET_STUDENT_MARKS(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
)RETURN STUDENT_MARKS_TABLE PIPELINED;

PROCEDURE ADD_STUDENT(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    USR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE,
    STDNT_ID IN STUDENT.CARD_ID%TYPE, 
    STDNT_NAME IN STUDENT.STUDENT_NAME%TYPE, 
    STUDY_SEMESTER IN STUDENT.ST_SEMESTER%TYPE
);

PROCEDURE UPDATE_STUDENT(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    STUDY_SEMESTER IN STUDENT.ST_SEMESTER%TYPE
);

PROCEDURE DELETE_STUDENT(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
);

END STUDENT_PACKAGE;

CREATE OR REPLACE PACKAGE BODY STUDENT_PACKAGE IS

    FUNCTION GET_STUDENT_INFO(
        USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )RETURN STUDENT_INFO_TABLE 
        PIPELINED
    IS
    BEGIN
    FOR PIECE IN (
        SELECT DISTINCT USER_LOGIN, CARD_ID, STUDENT_NAME, ST_SEMESTER
        FROM STUDENT
        WHERE STUDENT.USER_LOGIN = USR_LOGIN
    ) LOOP
        PIPE ROW (PIECE);
    END LOOP;
    END GET_STUDENT_INFO;
    
    FUNCTION GET_STUDENT_MARKS(
        USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )RETURN STUDENT_MARKS_TABLE 
        PIPELINED
    IS
    BEGIN
    FOR PIECE IN (
        SELECT DISTINCT MARK.DISCIPLINE_NAME, MARK.MARK
        FROM STUDENT JOIN MARK ON
        STUDENT.CARD_ID = MARK.CARD_ID
        WHERE STUDENT.USER_LOGIN = USR_LOGIN
    ) LOOP
        PIPE ROW (PIECE);
    END LOOP;
    END GET_STUDENT_MARKS;
    
    PROCEDURE ADD_STUDENT(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    USR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE,
    STDNT_ID IN STUDENT.CARD_ID%TYPE, 
    STDNT_NAME IN STUDENT.STUDENT_NAME%TYPE, 
    STUDY_SEMESTER IN STUDENT.ST_SEMESTER%TYPE
    )
    IS
    BEGIN
    INSERT INTO UNI_USER (USER_LOGIN, USER_PASSWORD, ROLE_NAME)
    VALUES (USR_LOGIN, USR_PASSWORD, 'STUDENT');
    INSERT INTO STUDENT (USER_LOGIN, CARD_ID, STUDENT_NAME, ST_SEMESTER)
    VALUES (USR_LOGIN, STDNT_ID, STDNT_NAME, STUDY_SEMESTER);
    COMMIT;
    END ADD_STUDENT;

    PROCEDURE UPDATE_STUDENT(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    STUDY_SEMESTER IN STUDENT.ST_SEMESTER%TYPE
    )
    IS
    BEGIN
    UPDATE STUDENT 
    SET STUDENT.ST_SEMESTER = STUDY_SEMESTER
    WHERE STUDENT.USER_LOGIN = USR_LOGIN;
    COMMIT;
    END UPDATE_STUDENT;

    PROCEDURE DELETE_STUDENT(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )
    IS
    BEGIN
    DELETE FROM STUDENT
    WHERE STUDENT.USER_LOGIN  = USR_LOGIN;
    DELETE FROM UNI_USER
    WHERE UNI_USER.USER_LOGIN  = USR_LOGIN;
    COMMIT;
    END DELETE_STUDENT;

END STUDENT_PACKAGE;
