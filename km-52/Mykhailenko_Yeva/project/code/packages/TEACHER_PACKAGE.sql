create PACKAGE TEACHER_PACKAGE AS

FUNCTION LOGIN_TO_TNAME(
    T_LOGIN  TEACHER.TEACHER_NAME%TYPE
    )RETURN VARCHAR2;

FUNCTION GET_TEACHER_INFO(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
)RETURN SYS_REFCURSOR;

FUNCTION GET_TEACHER_DISCIPLINE(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
)RETURN SYS_REFCURSOR;

PROCEDURE ADD_TEACHER(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    USR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE,
    TCHR_ID IN TEACHER.CONTRACT_ID%TYPE, 
    TCHR_NAME IN TEACHER.TEACHER_NAME%TYPE
);

PROCEDURE UPDATE_TEACHER_PASSWORD(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    TCHR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE
);

PROCEDURE UPDATE_TEACHER_NAME(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    TCHR_NAME IN TEACHER.TEACHER_NAME%TYPE
);

PROCEDURE DELETE_TEACHER(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
);

FUNCTION find_teacher(
        t_id           TEACHER.CONTRACT_ID%TYPE
    ) RETURN NUMBER;

END TEACHER_PACKAGE;
/

create PACKAGE BODY TEACHER_PACKAGE IS

  FUNCTION LOGIN_TO_TNAME(
    T_LOGIN  TEACHER.TEACHER_NAME%TYPE
    )RETURN VARCHAR2 IS
    tname VARCHAR2(30);
    BEGIN
    SELECT
    TEACHER.TEACHER_NAME
    INTO tname
    FROM TEACHER JOIN UNI_USER ON TEACHER.USER_LOGIN = UNI_USER.USER_LOGIN
        WHERE UNI_USER.USER_LOGIN = T_LOGIN;
    return(tname);
    END LOGIN_TO_TNAME;

    FUNCTION GET_TEACHER_INFO(
        USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )RETURN SYS_REFCURSOR
    IS
      cursorchik SYS_REFCURSOR;
    BEGIN
    OPEN cursorchik FOR
        SELECT DISTINCT UNI_USER.USER_LOGIN, UNI_USER.USER_PASSWORD, TEACHER.CONTRACT_ID, TEACHER.TEACHER_NAME
        FROM TEACHER JOIN UNI_USER ON TEACHER.USER_LOGIN = UNI_USER.USER_LOGIN
        WHERE TEACHER.USER_LOGIN = USR_LOGIN;
    RETURN cursorchik;
    END GET_TEACHER_INFO;

    FUNCTION GET_TEACHER_DISCIPLINE(
        USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )RETURN SYS_REFCURSOR
    IS
      cursorchik SYS_REFCURSOR;
    BEGIN
    OPEN cursorchik FOR
        SELECT DISTINCT HOMEWORK.DISCIPLINE_NAME, TEACHER.TEACHER_NAME
        FROM HOMEWORK JOIN TEACHER ON
        HOMEWORK.CONTRACT_ID = TEACHER.CONTRACT_ID
        WHERE TEACHER.USER_LOGIN = USR_LOGIN;
    RETURN cursorchik;
    END GET_TEACHER_DISCIPLINE;

    PROCEDURE ADD_TEACHER(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    USR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE,
    TCHR_ID IN TEACHER.CONTRACT_ID%TYPE, 
    TCHR_NAME IN TEACHER.TEACHER_NAME%TYPE
    )
    IS
    BEGIN
    INSERT INTO UNI_USER (USER_LOGIN, USER_PASSWORD, ROLE_NAME)
    VALUES (USR_LOGIN, USR_PASSWORD, 'TEACHER');
    INSERT INTO TEACHER (USER_LOGIN, CONTRACT_ID, TEACHER_NAME)
    VALUES (USR_LOGIN, TCHR_ID, TCHR_NAME);
    COMMIT;
    END ADD_TEACHER;

    PROCEDURE UPDATE_TEACHER_PASSWORD(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    TCHR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE
    )
    IS
    BEGIN
    UPDATE UNI_USER 
    SET UNI_USER.USER_PASSWORD = TCHR_PASSWORD
    WHERE UNI_USER.USER_LOGIN = USR_LOGIN;
    COMMIT;
    END UPDATE_TEACHER_PASSWORD;

    PROCEDURE UPDATE_TEACHER_NAME(
        USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
        TCHR_NAME IN TEACHER.TEACHER_NAME%TYPE
    )
    IS
    BEGIN
    UPDATE TEACHER 
    SET TEACHER.TEACHER_NAME = TCHR_NAME
    WHERE TEACHER.USER_LOGIN = USR_LOGIN;
    COMMIT;
    END UPDATE_TEACHER_NAME;

    PROCEDURE DELETE_TEACHER(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )
    IS
    BEGIN
    DELETE FROM HOMEWORK WHERE CONTRACT_ID IN
                               (SELECT HOMEWORK.CONTRACT_ID
                               FROM HOMEWORK JOIN TEACHER ON HOMEWORK.CONTRACT_ID = TEACHER.CONTRACT_ID
                               WHERE TEACHER.USER_LOGIN = USR_LOGIN);
    DELETE FROM TEACHER
    WHERE TEACHER.USER_LOGIN  = USR_LOGIN;
    DELETE FROM UNI_USER
    WHERE UNI_USER.USER_LOGIN  = USR_LOGIN;
    COMMIT;
    END DELETE_TEACHER;

  FUNCTION find_teacher(
        t_id           TEACHER.CONTRACT_ID%TYPE
    ) RETURN NUMBER IS
        res   NUMBER(1);
    BEGIN
        SELECT
            COUNT(*)
        INTO res
        FROM
            TEACHER
        WHERE
            TEACHER.CONTRACT_ID = t_id;

        return(res);
    END find_teacher;

END TEACHER_PACKAGE;
/

