CREATE OR REPLACE PACKAGE TEACHER_PACKAGE AS

TYPE TEACHER_INFO_RECORD IS RECORD (
    TEACHER_LOGIN UNI_USER.USER_LOGIN%TYPE, 
    CONTRACT_ID TEACHER.CONTRACT_ID%TYPE, 
    TEACHER_NAME TEACHER.TEACHER_NAME%TYPE
);
TYPE TEACHER_INFO_TABLE IS 
    TABLE OF TEACHER_INFO_RECORD;
    
TYPE TEACHER_DISCIPLINE_RECORD IS RECORD (
    DISCIPLINE_NAME DISCIPLINE.DISCIPLINE_NAME%TYPE
);
TYPE TEACHER_DISCIPLINE_TABLE IS 
    TABLE OF TEACHER_DISCIPLINE_RECORD;

FUNCTION GET_TEACHER_INFO(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
)RETURN TEACHER_INFO_TABLE PIPELINED;

FUNCTION GET_TEACHER_DISCIPLINE(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
)RETURN TEACHER_DISCIPLINE_TABLE PIPELINED;

PROCEDURE ADD_TEACHER(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    USR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE,
    TCHR_ID IN TEACHER.CONTRACT_ID%TYPE, 
    TCHR_NAME IN TEACHER.TEACHER_NAME%TYPE
);

PROCEDURE UPDATE_TEACHER_PASSWORD(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    TCHR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE
);

PROCEDURE UPDATE_TEACHER_NAME(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    TCHR_NAME IN TEACHER.TEACHER_NAME%TYPE
);

PROCEDURE DELETE_TEACHER(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
);

END TEACHER_PACKAGE;
/

CREATE OR REPLACE PACKAGE BODY TEACHER_PACKAGE IS

    FUNCTION GET_TEACHER_INFO(
        USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )RETURN TEACHER_INFO_TABLE
        PIPELINED
    IS
    BEGIN
    FOR PIECE IN (
        SELECT DISTINCT USER_LOGIN, CONTRACT_ID, TEACHER_NAME
        FROM TEACHER
        WHERE TEACHER.USER_LOGIN = USR_LOGIN
    ) LOOP
        PIPE ROW (PIECE);
    END LOOP;
    END GET_TEACHER_INFO;
    
    FUNCTION GET_TEACHER_DISCIPLINE(
        USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )RETURN TEACHER_DISCIPLINE_TABLE 
        PIPELINED
    IS
    BEGIN
    FOR PIECE IN (
        SELECT DISTINCT HOMEWORK.DISCIPLINE_NAME
        FROM HOMEWORK JOIN TEACHER ON
        HOMEWORK.CONTRACT_ID = TEACHER.CONTRACT_ID
        WHERE TEACHER.USER_LOGIN = USR_LOGIN
    ) LOOP
        PIPE ROW (PIECE);
    END LOOP;
    END GET_TEACHER_DISCIPLINE;
 
    PROCEDURE ADD_TEACHER(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    USR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE,
    TCHR_ID IN TEACHER.CONTRACT_ID%TYPE, 
    TCHR_NAME IN TEACHER.TEACHER_NAME%TYPE
    )
    IS
    BEGIN
    INSERT INTO UNI_USER (USER_LOGIN, USER_PASSWORD, ROLE_NAME)
    VALUES (USR_LOGIN, USR_PASSWORD, 'TEACHER');
    INSERT INTO TEACHER (USER_LOGIN, CONTRACT_ID, TEACHER_NAME)
    VALUES (USR_LOGIN, TCHR_ID, TCHR_NAME);
    COMMIT;
    END ADD_TEACHER;
    
    PROCEDURE UPDATE_TEACHER_PASSWORD(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
    TCHR_PASSWORD IN UNI_USER.USER_PASSWORD%TYPE
    )
    IS
    BEGIN
    UPDATE UNI_USER 
    SET UNI_USER.USER_PASSWORD = TCHR_PASSWORD
    WHERE UNI_USER.USER_LOGIN = USR_LOGIN;
    COMMIT;
    END UPDATE_TEACHER_PASSWORD;
    
    PROCEDURE UPDATE_TEACHER_NAME(
        USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE,
        TCHR_NAME IN TEACHER.TEACHER_NAME%TYPE
    )
    IS
    BEGIN
    UPDATE TEACHER 
    SET TEACHER.TEACHER_NAME = TCHR_NAME
    WHERE TEACHER.USER_LOGIN = USR_LOGIN;
    COMMIT;
    END UPDATE_TEACHER_NAME;

    PROCEDURE DELETE_TEACHER(
    USR_LOGIN IN UNI_USER.USER_LOGIN%TYPE
    )
    IS
    BEGIN
    DELETE FROM TEACHER
    WHERE TEACHER.USER_LOGIN  = USR_LOGIN;
    DELETE FROM UNI_USER
    WHERE UNI_USER.USER_LOGIN  = USR_LOGIN;
    COMMIT;
    END DELETE_TEACHER;

END TEACHER_PACKAGE;
/